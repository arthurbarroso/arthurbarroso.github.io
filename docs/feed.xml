<?xml version="1.0" encoding="UTF-8"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="https://arthurbrrs.me" rel="self" type="application/rss+xml"/><title>(arthur barroso)</title><link>https://arthurbrrs.me</link><description>A blog about software</description><lastBuildDate>Tue, 04 Jun 2024 17:26:24 -0300</lastBuildDate><generator>clj-rss</generator><item><guid>https://arthurbrrs.me/clojure-doom-emacs-m1</guid><link>https://arthurbrrs.me/clojure-doom-emacs-m1</link><title>Clojure and Doom Emacs on a brand new M1 computer</title><description>I've recently landed my first Clojure position and received an m1-powered MacBook. Two months before that, I had also bought myself an m1 MacBook air and had to set up Clojure to use it in my projects. Since I had no experience using macOS whatsoever I had to do some googling and managed to get a pretty simple setup running.There are lots of tutorials out there on how to set up m1 laptops for Clojure usage, but there are a few quirks that aren't yet documented, such as how to get clj-kondo and parinfer to work in it. I'll try to cover these steps in this post, while also showing how to set up doom emacs and some other stuff I ended up using myself.</description><pubDate>Sun, 17 Apr 2022 00:00:00 -0300</pubDate></item><item><guid>https://arthurbrrs.me/pre-signed-s3-clojurescript</guid><link>https://arthurbrrs.me/pre-signed-s3-clojurescript</link><title>Pre-signed uploads to AWS S3 using Clojure(script)</title><description>I've recently stumbled upon a task: uploading images from an input and saving those. This can be done in several ways, such as storing files directly to your server's storage, saving these files inside a database, or uploading them to some cloud provider's service, such as AWS's S3. There are various reasons one may choose each of these strategies, but I decided to stick with the latter.From my previous JavaScript/React experience I knew this could be done using S3's pre-signed URLs, but didn't know how to do this in Clojure, even though the overall process/technique isn't much different.</description><pubDate>Mon, 24 Jan 2022 00:00:00 -0300</pubDate></item><item><guid>https://arthurbrrs.me/prerendering-react-clojurescript-land</guid><link>https://arthurbrrs.me/prerendering-react-clojurescript-land</link><title>React prerendering experiments in Clojure(script) land</title><description>I've been kinda fascinated about pre-rendering my react applications for about three months. It all started when I started to develop brundij and realized I wouldn't be able to get good performance results without some prerendering techniques, which ultimately led me into reading lots of stuff about it.I have developed React applications for some time already, but never really had to get prerendering to work without using frameworks such as Gatsby or Next, so this was a new challenge for me. I ended up deciding to write this post talking about all the stuff I tried and what I think about each of those. This should not be seen as a tutorial, all the stuff here is highly experimental.</description><pubDate>Tue, 21 Sep 2021 00:00:00 -0300</pubDate></item><item><guid>https://arthurbrrs.me/testing-the-dom-using-shadow-and-reagent</guid><link>https://arthurbrrs.me/testing-the-dom-using-shadow-and-reagent</link><title>Testing the DOM using shadow-cljs and Reagent</title><description>I've been recently trying to build a side-project. I ended up deciding on using Clojure and Clojurescript to build it (I've been learning clojure for a few months already but feel like a complete beginner, so I thought building something might help me grasp some stuff). I also decided to use shadow-cljs to set up my project.Everything was going pretty smoothly until I needed to run DOM tests, which seemed like a big mistery to me -it seemed like most CLJS developers were only using Cypress and the only post I could find talking about react-testing-library in clojurescript was two years old. All of this led me into creating this post, in which, I am going to try to help Clojurescript beginners, like me, run DOM tests on their shadow-cljs + reagent applications.</description><pubDate>Mon, 13 Sep 2021 00:00:00 -0300</pubDate></item></channel></rss>